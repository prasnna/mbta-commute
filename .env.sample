# MBTA API key
# Get your API key from https://api-v3.mbta.com/
MBTA_API_KEY=your_mbta_api_key

# Set to False to disable SSL certificate verification
MBTA_SSL_VERIFY=True

# --- Algorithm Configuration ---

# --- Alerting (Shared across scripts) ---
# Time window (in minutes) to trigger "Time to leave now" alert
MBTA_ALERT_LEAVE_NOW_WINDOW_MIN_MINUTES=5
MBTA_ALERT_LEAVE_NOW_WINDOW_MAX_MINUTES=10
# Threshold (in minutes) for next service to be considered a "Severe Delay"
MBTA_ALERT_SEVERE_DELAY_THRESHOLD_MINUTES=60

# --- Retry/Sleep Durations (Shared across scripts, in minutes) ---
# How long to wait before retrying if API returns no data or no services found
MBTA_RETRY_NO_DATA_MINUTES=3
# How long to wait before retrying after a general API error or other exception
MBTA_RETRY_ERROR_MINUTES=5

# --- Commute Bridge Specific (`commute_bridge.py`) ---
# How long to wait before retrying if no viable train-bus connections are found
MBTA_RETRY_NO_CONNECTION_MINUTES=5
# Assumed travel time (minutes) from your train departure to being ready for the bus at the transfer station (e.g., Braintree)
MBTA_BRIDGE_TRANSFER_TIME_MINUTES=30
# How many minutes before the optimal train's departure to aim for the next check
MBTA_BRIDGE_CHECK_BUFFER_MINUTES=10
# Minimum interval (minutes) between checks by the commute bridge
MBTA_BRIDGE_MIN_CHECK_INTERVAL_MINUTES=1
# Maximum interval (minutes) between checks by the commute bridge
MBTA_BRIDGE_MAX_CHECK_INTERVAL_MINUTES=5

# --- Monitor Specific (`red_line.py`, `bus_226.py`) ---
# Minimum loop time (minutes) between checks
MBTA_MONITOR_MIN_LOOP_MINUTES=2
# Maximum loop time (minutes) between checks if the next service is far off
MBTA_MONITOR_MAX_LOOP_MINUTES=10
# How many minutes *before* the 'MBTA_ALERT_LEAVE_NOW_WINDOW_MAX_MINUTES' to schedule a check
MBTA_MONITOR_CHECK_EARLY_BUFFER_MINUTES=2
# Loop time (minutes) if only one prediction is available
MBTA_MONITOR_SINGLE_PREDICTION_LOOP_MINUTES=5
